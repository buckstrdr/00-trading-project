//@version=5
indicator("Correct 3-Candle Reversal V7", shorttitle="3CR_V7", overlay=true, max_boxes_count=50, max_lines_count=50, max_labels_count=50)

// === PARAMETERS (Exact user specifications) ===

// Reversal Detection
minPointChange = input.float(1.5, "Minimum Point Change", minval=0.5, maxval=3.0, step=0.1, group="Reversal Pattern")
volumeMultiplier = input.float(2.0, "Volume Multiplier (vs 20MA)", minval=1.5, maxval=3.0, step=0.1, group="Reversal Pattern")

// Risk Management
stopLossPct = input.float(0.8, "Stop Loss %", minval=0.5, maxval=2.0, step=0.1, group="Risk Management")
riskRewardRatio = input.float(3.0, "Risk:Reward Ratio", minval=2.0, maxval=5.0, step=0.5, group="Risk Management")

// Trade Management
cooldownBars = input.int(10, "Cooldown Between Signals", minval=5, maxval=30, group="Risk Management")

// Display
showPatternDetails = input.bool(true, "Show Pattern Details", group="Display")

// === CORRECT 3-CANDLE REVERSAL DETECTION ===

// Volume analysis (exact user spec: 2x the 20MA)
volume20MA = ta.sma(volume, 20)
volumeSpike = volume >= volume20MA * volumeMultiplier

// Candle analysis (exact user spec: 1.5+ point change)
candleChange = close - open
significantChange = math.abs(candleChange) >= minPointChange

// CORRECT 3-Candle Engulfing Logic (from debugging):
// Current candle must have:
// 1. High > ALL 3 previous highs
// 2. Low < ALL 3 previous lows
// 3. This means current candle completely engulfs the previous 3 bars

var bool engulfs3Candles = false

if bar_index >= 3
    // Get previous 3 bars
    prev1High = high[1]
    prev1Low = low[1]
    prev2High = high[2]
    prev2Low = low[2]
    prev3High = high[3]
    prev3Low = low[3]
    
    // Check if current candle completely engulfs all 3 previous candles
    highEngulfs = high > prev1High and high > prev2High and high > prev3High
    lowEngulfs = low < prev1Low and low < prev2Low and low < prev3Low
    
    engulfs3Candles := highEngulfs and lowEngulfs

// === REVERSAL SIGNAL CONDITIONS (User's exact specs) ===

// Bullish 3-candle reversal
bullishReversal = close > open and // Bullish candle
                 engulfs3Candles and // Engulfs previous 3 candles  
                 volumeSpike and // 2x+ volume
                 candleChange >= minPointChange // 1.5+ point change

// Bearish 3-candle reversal
bearishReversal = close < open and // Bearish candle
                 engulfs3Candles and // Engulfs previous 3 candles
                 volumeSpike and // 2x+ volume  
                 candleChange <= -minPointChange // 1.5+ point change (negative)

// === TRADE STATE MANAGEMENT ===

var float entryPrice = na
var float stopPrice = na
var float targetPrice = na
var bool inTrade = false
var string tradeDirection = ""
var int entryBar = na
var int lastSignalBar = na

// Cooldown and entry conditions
cooldownOK = na(lastSignalBar) or (bar_index - lastSignalBar) >= cooldownBars
canEnter = not inTrade and cooldownOK

// === ENTRY LOGIC ===

if bullishReversal and canEnter
    entryPrice := close
    stopPrice := entryPrice * (1 - stopLossPct / 100)
    targetPrice := entryPrice * (1 + (stopLossPct / 100) * riskRewardRatio)
    inTrade := true
    tradeDirection := "LONG"
    entryBar := bar_index
    lastSignalBar := bar_index
    
    // Entry label with exact pattern details
    labelText = "🔄 3-CANDLE LONG\n" + str.tostring(entryPrice, "#.##")
    if showPatternDetails
        labelText := labelText + "\nΔ" + str.tostring(candleChange, "#.#") + " pts"
        labelText := labelText + "\nVol: " + str.tostring(volume/volume20MA, "#.#") + "x"
        labelText := labelText + "\nEngulfs 3 bars"
    
    label.new(bar_index, low, labelText, 
             color=color.new(color.green, 10), style=label.style_label_up, 
             size=size.normal, textcolor=color.white)

if bearishReversal and canEnter
    entryPrice := close
    stopPrice := entryPrice * (1 + stopLossPct / 100)
    targetPrice := entryPrice * (1 - (stopLossPct / 100) * riskRewardRatio)
    inTrade := true
    tradeDirection := "SHORT"
    entryBar := bar_index
    lastSignalBar := bar_index
    
    // Entry label with exact pattern details
    labelText = "🔄 3-CANDLE SHORT\n" + str.tostring(entryPrice, "#.##")
    if showPatternDetails
        labelText := labelText + "\nΔ" + str.tostring(candleChange, "#.#") + " pts"
        labelText := labelText + "\nVol: " + str.tostring(volume/volume20MA, "#.3") + "x"
        labelText := labelText + "\nEngulfs 3 bars"
    
    label.new(bar_index, high, labelText, 
             color=color.new(color.red, 10), style=label.style_label_down, 
             size=size.normal, textcolor=color.white)

// === EXIT LOGIC ===

var string exitReason = ""

if inTrade
    if tradeDirection == "LONG"
        if low <= stopPrice
            exitReason := "STOP"
            inTrade := false
        else if high >= targetPrice
            exitReason := "TARGET" 
            inTrade := false
    else if tradeDirection == "SHORT"
        if high >= stopPrice
            exitReason := "STOP"
            inTrade := false
        else if low <= targetPrice
            exitReason := "TARGET"
            inTrade := false

// === PERFORMANCE TRACKING ===

var int totalTrades = 0
var int winningTrades = 0
var float totalReturnPct = 0.0

if exitReason != ""
    totalTrades += 1
    
    // Calculate return percentage
    returnPct = 0.0
    if tradeDirection == "LONG"
        returnPct := (close - entryPrice) / entryPrice * 100
    else
        returnPct := (entryPrice - close) / entryPrice * 100
    
    totalReturnPct += returnPct
    
    if returnPct > 0
        winningTrades += 1
    
    // Calculate RR achieved
    rrAchieved = exitReason == "TARGET" ? riskRewardRatio : -1.0
    
    // Exit label
    isWin = exitReason == "TARGET"
    labelColor = isWin ? color.new(color.lime, 10) : color.new(color.maroon, 10)
    exitText = (isWin ? "✅ 3RR " : "❌ SL ") + exitReason
    exitText := exitText + "\nReturn: " + str.tostring(returnPct, "#.#") + "%"
    
    label.new(bar_index, isWin ? high : low, exitText, 
             color=labelColor, style=label.style_label_down, 
             size=size.normal, textcolor=color.white)
    
    // Trade box exactly like user's chart
    if not na(entryBar) and isWin
        // Winning trade: Red (SL) to Green (TP) box with white entry line
        box.new(entryBar, targetPrice, bar_index, stopPrice, 
                bgcolor=color.new(color.green, 80), border_color=color.green, border_width=2)
        // White entry line through the middle
        line.new(entryBar, entryPrice, bar_index, entryPrice, 
                color=color.white, width=2, style=line.style_solid)
    else if not na(entryBar) and not isWin
        // Losing trade: Red box only (entry to stop)
        if tradeDirection == "LONG"
            box.new(entryBar, entryPrice, bar_index, stopPrice, 
                    bgcolor=color.new(color.red, 80), border_color=color.red, border_width=2)
        else
            box.new(entryBar, stopPrice, bar_index, entryPrice, 
                    bgcolor=color.new(color.red, 80), border_color=color.red, border_width=2)
    
    // Reset variables
    exitReason := ""
    tradeDirection := ""
    entryBar := na

// === DISPLAY ELEMENTS ===

// Active trade levels
plot(inTrade ? entryPrice : na, "Entry Price", color=color.white, linewidth=3, style=plot.style_circles)
plot(inTrade ? stopPrice : na, "Stop Loss", color=color.red, linewidth=2, style=plot.style_cross)
plot(inTrade ? targetPrice : na, "Take Profit (3RR)", color=color.lime, linewidth=2, style=plot.style_cross)

// Volume threshold reference line
plot(volume20MA * volumeMultiplier, "Volume Threshold", color=color.new(color.orange, 80), linewidth=1)

// Background highlight for reversal signals
bgcolor(bullishReversal ? color.new(color.green, 95) : bearishReversal ? color.new(color.red, 95) : na, title="3-Candle Reversal")

// === STATISTICS TABLE ===

if barstate.islast
    var table statsTable = table.new(position.top_right, 2, 7, bgcolor=color.new(color.white, 10), border_width=1)
    
    // Header
    table.cell(statsTable, 0, 0, "3-CANDLE STATS", text_color=color.black, bgcolor=color.new(color.gray, 30))
    table.cell(statsTable, 1, 0, "VALUE", text_color=color.black, bgcolor=color.new(color.gray, 30))
    
    // Statistics
    table.cell(statsTable, 0, 1, "Total Trades", text_color=color.black)
    table.cell(statsTable, 1, 1, str.tostring(totalTrades), text_color=color.black)
    
    winRate = totalTrades > 0 ? winningTrades / totalTrades * 100 : 0
    table.cell(statsTable, 0, 2, "Win Rate", text_color=color.black)
    table.cell(statsTable, 1, 2, str.tostring(winRate, "#") + "%", text_color=winRate >= 40 ? color.green : color.red)
    
    avgReturn = totalTrades > 0 ? totalReturnPct / totalTrades : 0
    table.cell(statsTable, 0, 3, "Avg Return", text_color=color.black)
    table.cell(statsTable, 1, 3, str.tostring(avgReturn, "#.#") + "%", text_color=avgReturn > 0 ? color.green : color.red)
    
    table.cell(statsTable, 0, 4, "3RR Hits", text_color=color.black)
    table.cell(statsTable, 1, 4, str.tostring(winningTrades), text_color=winningTrades > 0 ? color.green : color.gray)
    
    totalReturn = totalTrades > 0 ? totalReturnPct : 0
    table.cell(statsTable, 0, 5, "Total Return", text_color=color.black)
    table.cell(statsTable, 1, 5, str.tostring(totalReturn, "#.#") + "%", text_color=totalReturn > 0 ? color.green : color.red)
    
    // Current trade status
    table.cell(statsTable, 0, 6, "Active Trade", text_color=color.black)
    activeText = inTrade ? (tradeDirection == "LONG" ? "3C-LONG" : "3C-SHORT") : "None"
    table.cell(statsTable, 1, 6, activeText, text_color=inTrade ? color.blue : color.gray)

// === ALERTS ===

alertcondition(bullishReversal, title="3-Candle Bullish Reversal", message="3-Candle bullish reversal: 2x volume, 1.5+ pts, engulfs 3 bars")
alertcondition(bearishReversal, title="3-Candle Bearish Reversal", message="3-Candle bearish reversal: 2x volume, 1.5+ pts, engulfs 3 bars")
alertcondition(exitReason == "TARGET", title="3RR Target Achieved", message="3-Candle reversal trade hit 3RR target!")
alertcondition(exitReason == "STOP", title="Stop Loss Hit", message="3-Candle reversal trade stopped out")